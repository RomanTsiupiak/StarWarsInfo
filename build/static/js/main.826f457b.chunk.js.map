{"version":3,"sources":["theme/theme.js","common/ThemeSwitcher/ThemeSwitcher.js","Components/Header/Header.js","api/api.js","common/LoadingSpinner/LoadingSpinner.js","common/getIdFromUrl/getIdFromUrl.js","Components/People/Person/PersonInfo.js","Components/People/Person/PersonFilms.js","common/BackButton/BackButton.js","Components/People/Person/Person.js","Components/ListsItem/ListsItem.js","Components/Films/Films.js","Components/Films/Film/FilmInfo.js","Components/Films/Film/FilmCharacter.js","Components/Films/Film/Film.js","Components/NavBar/NavBar.styles.js","Components/NavBar/NavBar.js","common/SearchBar/SearchBar.js","common/PageNumberBar/PageNumberBar.js","Components/People/People.js","App.js","serviceWorker.js","index.js"],"names":["darkTheme","bgColor","textColor","opacityBgColor","bgImage","lightTheme","ThemeSwitcher","props","StyledButton","styled","button","theme","type","onClick","setTheme","Header","div","StyledLink","Link","to","axiosInstance","axios","baseURL","peopleAPI","page","get","then","response","data","value","id","filmAPI","LoadingSpinner","LoaderWrapper","Loader","getIdFromUrl","url","match","PersonInfo","item","PersonImage","img","DetailBox","StyledTextItem","StyledHeader","src","alt","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","PersonFilms","useState","filmInfo","setFilmInfo","filmUrl","useEffect","result","title","withRouter","history","goBack","personInfo","setPersonInfo","filmsLink","setFilmsLink","isLoading","setIsLoading","params","films","toItem","useCallback","key","filmList","map","PersonStyleWrapper","PersonBox","Films","setFilms","results","filmLinksList","FilmsStyleWrapper","FilmInfo","FilmImage","director","producer","release_date","opening_crawl","FilmCharacter","personUrl","peopleLink","setPeopleLink","characters","characterList","FilmBox","NavBarWrapper","NavBarButton","MenuSvg","svg","NavBarBlock","StyledNavLink","NavLink","NavBar","isShow","setIsShow","toggleNavBar","xmlns","width","viewBox","d","SearchBar","SearchBarWrapper","SearchBox","StyledInput","input","searchValue","onChange","filterOnChange","placeholder","cleanSearchValue","data-ember-extension","PageNumberBar","PageNumberBarWrapper","showPreviousPage","disabled","availablePage","previous","showNextPage","next","peopleList","setPeopleList","setSearchValue","setPage","setAvailablePage","setQueryString","action","currentPage","push","pathname","search","getDataFromApi","promise","personLinksList","PeopleStyleWrapper","event","target","App","className","basename","process","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"oSAAaA,EAAY,CACxBC,QAAS,UACTC,UAAW,UACXC,eAAgB,wBAChBC,QAAS,gFAGGC,EAAa,CACzBJ,QAAS,UACTC,UAAW,UACXC,eAAgB,2BAChBC,QAAS,uG,ufCNV,IAqCeE,EArCO,SAACC,GAEtB,IAMMC,EAAeC,IAAOC,OAAV,KAKF,SAAAH,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAEjB,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAChC,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAUzC,OAAO,kBAAC,IAAD,CAAeU,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACzE,kBAACQ,EAAD,CAAcI,KAAK,WAAWC,QA5BX,WACH,eAAhBN,EAAMI,MACLJ,EAAMO,SAAS,eACfP,EAAMO,SAAS,gBAyBhB,oB,+oBC5BF,IAuCeC,EAvCA,SAACR,GACf,IAAMQ,EAASN,IAAOO,IAAV,KAMQ,SAAAT,GAAK,OAAIA,EAAMI,MAAMV,WAChC,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aACH,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAK1Ce,EAAaR,YAAOS,IAAPT,CAAH,KAKA,SAAAF,GAAK,OAAIA,EAAMI,MAAMT,aAYrC,OAAO,kBAAC,IAAD,CAAeS,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACzE,kBAACe,EAAD,KACC,kBAACE,EAAD,CAAYE,GAAG,KAAf,kBACA,kBAAC,EAAD,CAAeL,SAAUP,EAAMO,SAAUH,MAAOJ,EAAMI,W,QCvCnDS,E,MAAgBC,OAAa,CAC/BC,QAAS,0BAIAC,EAAY,SACVC,GACP,OAAOJ,EAAcK,IAAd,wBAAmCD,IACrCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAH1BL,EAAY,SAKFM,EAAOL,GACtB,OAAOJ,EAAcK,IAAd,0BAAqCI,EAArC,iBAAmDL,IACrDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAP1BL,EAAY,SASJO,GACb,OAAOV,EAAcK,IAAd,kBAA6BK,IAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAI1BG,EAAU,WAEf,OAAOX,EAAcK,IAAI,UACpBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAH1BG,EAAU,SAKJD,GACX,OAAOV,EAAcK,IAAd,iBAA4BK,IAC9BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,osBCxBvC,IAqCeI,EArCQ,SAACzB,GAEpB,IAAM0B,EAAgBxB,IAAOO,IAAV,KAIbkB,EAASzB,IAAOO,IAAV,KAYS,SAAAT,GAAK,OAAIA,EAAMI,MAAMT,aAC1B,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAAyB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAWnF,OAAO,kBAAC,IAAD,CAAeS,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACiC,EAAD,KACI,kBAACC,EAAD,SCjCGC,EAJM,SAACC,GACd,OAAOA,GAAOA,EAAIC,MAAM,Y,q+BCIhC,IAuDeC,EAvDI,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAM5B,EAAW,EAAXA,MAEjB6B,EAAc/B,IAAOgC,IAAV,KAYXC,EAAYjC,IAAOO,IAAV,KAQT2B,EAAiBlC,IAAOO,IAAV,KAWd4B,EAAenC,YAAOkC,EAAPlC,CAAH,KAKlB,OAAO,kBAAC,IAAD,CAAeE,MAAiB,gBAAVA,EAA0BN,EAAaL,GACxD,kBAACwC,EAAD,CACIK,IAAKN,EAAKH,KAAL,iEAAsED,EAAaI,EAAKH,KAAxF,QACLU,IAAKP,EAAKQ,OACV,kBAACL,EAAD,KACI,kBAACE,EAAD,KAAeL,EAAKQ,MACpB,kBAACJ,EAAD,iBAA0BJ,EAAKS,QAC/B,kBAACL,EAAD,eAAwBJ,EAAKU,MAC7B,kBAACN,EAAD,qBAA8BJ,EAAKW,YACnC,kBAACP,EAAD,qBAA8BJ,EAAKY,YACnC,kBAACR,EAAD,oBAA6BJ,EAAKa,WAClC,kBAACT,EAAD,qBAA8BJ,EAAKc,YACnC,kBAACV,EAAD,iBAA0BJ,EAAKe,W,ojBChDvD,IA2CeC,EA3CK,SAAChD,GAAW,IAAD,EACKiD,mBAAS,IADd,mBACpBC,EADoB,KACVC,EADU,KAErB5B,EAAKK,EAAa5B,EAAMoD,SAG9BC,qBAAU,WACN7B,EAAuBD,GAClBJ,MAAK,SAAAmC,GAAM,OAAIH,EAAYG,QACjC,CAACtD,EAAMoD,QAASD,IAGnB,IAAMzC,EAAaR,YAAOS,IAAPT,CAAH,KAQP,SAAAF,GAAK,OAAIA,EAAMI,MAAMT,aAGrB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAEb,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAChC,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAQtC,OAAO,kBAAC,IAAD,CAAeU,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACiB,EAAD,CAAYE,GAAE,iBAAYW,IACrB2B,EAASK,S,4XCxCtB,IAsBeC,eAtBI,SAACxD,GAEhB,IAAMC,EAAeC,IAAOC,OAAV,KAKL,SAAAH,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAEjB,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAChC,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAItC,OAAO,kBAAC,IAAD,CAAeU,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACQ,EAAD,CAAcK,QAASN,EAAMyD,QAAQC,QAArC,Y,gpBCbR,IAmEeF,eAnEA,SAACxD,GAAW,IAAD,EACciD,mBAAS,IADvB,mBACfU,EADe,KACHC,EADG,OAEYX,mBAAS,IAFrB,mBAEfY,EAFe,KAEJC,EAFI,OAGYb,oBAAS,GAHrB,mBAGfc,EAHe,KAGJC,EAHI,KAMtBX,qBAAU,WACNW,GAAa,GACbhD,EAA2BhB,EAAM8B,MAAMmC,OAAO1C,IACzCJ,MAAK,SAAAmC,GAAW,IACRY,EAAwBZ,EAAxBY,MAAUP,EADH,YACiBL,EADjB,WAEZM,EAAcD,GACdG,EAAaI,GACbF,GAAa,QAEtB,CAACJ,EAAeE,EAAcE,IAGjC,IAAMG,EAASC,uBAAY,SAAApC,GAAI,OAAI,kBAAC,EAAD,CAAaoB,QAASpB,EAAMqC,IAAKrC,EAAM5B,MAAOJ,EAAMI,WACjFkE,EAAWT,EAAUU,IAAIJ,GAGzBK,EAAqBtE,IAAOO,IAAV,KASC,SAAAT,GAAK,OAAIA,EAAMI,MAAMP,WAGxC4E,EAAYvE,IAAOO,IAAV,KAKN,SAAAT,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMR,kBAOzC,OAAO,kBAAC,IAAD,CAAeQ,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAAC+E,EAAD,KACA,kBAAC,EAAD,CAAYpE,MAAOJ,EAAMI,QAErB2D,EACM,kBAAC,EAAD,CAAgB3D,MAAOJ,EAAMI,QAC7B,kBAACqE,EAAD,KACE,kBAAC,EAAD,CAAYzC,KAAM2B,EAAYvD,MAAOJ,EAAMI,SAGnD,kBAACqE,EAAD,KACKH,Q,qiBCjEjB,IAAM5D,EAAaR,YAAOS,IAAPT,CAAH,KAQH,SAAAF,GAAK,OAAIA,EAAMI,MAAMT,aAGrB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAEjB,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAChC,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAiBvB8D,eAVG,SAAC,GAA8B,IAA7BhB,EAA4B,EAA5BA,KAAMjB,EAAsB,EAAtBA,GAAIO,EAAkB,EAAlBA,MAAO1B,EAAW,EAAXA,MAGjC,OAAO,kBAAC,IAAD,CAAeA,MAAiB,gBAAVA,EAA0BN,EAAaL,GAChE,kBAAC,EAAD,CAAYmB,GAAIkB,EAAMD,IAAN,WAAgBN,IAC3BiB,O,4aC3Bb,IAyCekC,EAzCD,SAAC1E,GAAW,IAAD,EACKiD,mBAAS,IADd,mBACdiB,EADc,KACPS,EADO,KAIrBtB,qBAAU,WACN7B,IACKL,MAAK,SAAAmC,GAAM,OAAIqB,EAASrB,EAAOsB,cACrC,CAACD,IAGJ,IAAMR,EAASC,uBAAY,SAAApC,GAAI,OAAI,kBAAC,EAAD,CAAWQ,KAAMR,EAAKuB,MAAOhC,GAAIK,EAAaI,EAAKH,KAC/BwC,IAAKrC,EAAKuB,MAAOnD,MAAOJ,EAAMI,WAC/EyE,EAAgBX,EAAMK,IAAIJ,GAG1BW,EAAoB5E,IAAOO,IAAV,KAUE,SAAAT,GAAK,OAAIA,EAAMI,MAAMP,WAS9C,OAAO,kBAAC,IAAD,CAAeO,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACqF,EAAD,KACKD,K,87BCtCb,IAkDeE,EAlDE,SAAC,GAAmB,IAAlB/C,EAAiB,EAAjBA,KAAM5B,EAAW,EAAXA,MAEf4E,EAAY9E,IAAOgC,IAAV,KAWTC,EAAYjC,IAAOO,IAAV,KAST2B,EAAiBlC,IAAOO,IAAV,KASd4B,EAAenC,YAAOkC,EAAPlC,CAAH,KAKlB,OAAO,kBAAC,IAAD,CAAeE,MAAiB,gBAAVA,EAA0BN,EAAaL,GAChE,kBAACuF,EAAD,CACI1C,IAAG,4DAAuDV,EAAaI,EAAKH,KAAzE,QACHU,IAAKP,EAAKQ,OACd,kBAACL,EAAD,KACI,kBAACE,EAAD,KAAeL,EAAKuB,OACpB,kBAACnB,EAAD,mBAA4BJ,EAAKiD,UACjC,kBAAC7C,EAAD,mBAA4BJ,EAAKkD,UACjC,kBAAC9C,EAAD,uBAAgCJ,EAAKmD,cACrC,kBAAC/C,EAAD,qBAA8BJ,EAAKoD,kB,sjBC3C/C,IA4CeC,EA5CO,SAACrF,GAAW,IAAD,EACOiD,mBAAS,IADhB,mBACtBU,EADsB,KACVC,EADU,KAEvBrC,EAAKK,EAAa5B,EAAMsF,WAG9BjC,qBAAU,WACNrC,EAA2BO,GACtBJ,MAAK,SAAAmC,GACFM,EAAcN,QACvB,CAACtD,EAAMsF,UAAW1B,IAGrB,IAAMlD,EAAaR,YAAOS,IAAPT,CAAH,KAQP,SAAAF,GAAK,OAAIA,EAAMI,MAAMT,aAGrB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAEb,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAChC,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAQtC,OAAO,kBAAC,IAAD,CAAeU,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACiB,EAAD,CAAYE,GAAE,kBAAaW,IACtBoC,EAAWnB,Q,opBCpCxB,IAkEegB,gBAlEF,SAACxD,GAAW,IAAD,EACYiD,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,OAEgBF,mBAAS,IAFzB,mBAEbsC,EAFa,KAEDC,EAFC,OAGcvC,oBAAS,GAHvB,mBAGbc,EAHa,KAGFC,EAHE,KAMpBX,qBAAU,WACNW,GAAa,GACbxC,EAAuBxB,EAAM8B,MAAMmC,OAAO1C,IACrCJ,MAAK,SAAAmC,GAAW,IACRmC,EAA2BnC,EAA3BmC,WAAevC,EADR,YACoBI,EADpB,gBAEZH,EAAYD,GACZsC,EAAcC,GACdzB,GAAa,QAEtB,CAACb,EAAaqC,EAAexB,IAGhC,IAAMG,EAASC,uBAAY,SAAApC,GAAI,OAAI,kBAAC,EAAD,CAAesD,UAAWtD,EAAMqC,IAAKrC,EAAM5B,MAAOJ,EAAMI,WACrFsF,EAAgBH,EAAWhB,IAAIJ,GAG/BW,EAAoB5E,IAAOO,IAAV,MASE,SAAAT,GAAK,OAAIA,EAAMI,MAAMP,WAGxC8F,EAAUzF,IAAOO,IAAV,MAKJ,SAAAT,GAAK,OAAIA,EAAMI,MAAMT,aACV,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMR,kBAOzC,OAAO,kBAAC,IAAD,CAAeQ,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACqF,EAAD,KACI,kBAAC,EAAD,CAAY1E,MAAOJ,EAAMI,QAErB2D,EACM,kBAAC,EAAD,CAAgB3D,MAAOJ,EAAMI,QAC7B,kBAACuF,EAAD,KACE,kBAAC,EAAD,CAAU3D,KAAMkB,KAG5B,kBAACyC,EAAD,KACKD,Q,omCCnEV,IAAME,GAAgB1F,IAAOO,IAAV,MAMC,SAAAT,GAAK,OAAIA,EAAMI,MAAMV,WAEd,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAG1CkG,GAAe3F,IAAOO,IAAV,MAGR,SAAAT,GAAK,OAAIA,EAAMI,MAAMT,aAKzBmG,GAAU5F,IAAO6F,IAAV,MACR,SAAA/F,GAAK,OAAIA,EAAMI,MAAMT,aAGpBqG,GAAc9F,IAAOO,IAAV,MAIW,SAAAT,GAAK,OAAIA,EAAMI,MAAMV,WAI3CuG,GAAgB/F,YAAOgG,IAAPhG,CAAH,MAKT,SAAAF,GAAK,OAAIA,EAAMI,MAAMT,aAEH,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAExB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAChC,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WCb3ByG,GA1BA,SAACnG,GAAW,IAAD,EACMiD,oBAAS,GADf,mBACfmD,EADe,KACPC,EADO,KAEhBC,EAAe,kBAAMD,GAAWD,IAGtC,OAAO,kBAAC,IAAD,CAAehG,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACmG,GAAD,KACI,kBAACC,GAAD,CAAcvF,QAASgG,GACnB,kBAACR,GAAD,CAASS,MAAM,6BAA6BC,MAAM,KAAK/D,OAAO,KAAKgE,QAAQ,aACvE,0BAAMC,EAAE,2DAGfN,GACD,kBAACJ,GAAD,CAAaI,QAAM,GAEf,kBAACH,GAAD,CAAe3F,QAASgG,EAAc1F,GAAI,WAA1C,UAEA,kBAACqF,GAAD,CAAe3F,QAASgG,EAAc1F,GAAI,UAA1C,a,soCCjBhB,IAuEe+F,GAvEG,SAAC3G,GAElB,IAAM4G,EAAmB1G,IAAOO,IAAV,MAGV,SAAAT,GAAK,OAAIA,EAAMI,MAAMT,aAI3BkH,EAAY3G,IAAOO,IAAV,MAKQ,SAAAT,GAAK,OAAIA,EAAMI,MAAMT,aAGrB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAGtCoH,EAAc5G,IAAO6G,MAAV,MAUL,SAAA/G,GAAK,OAAIA,EAAMI,MAAMT,aAMrB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAK3BM,EAAeC,IAAOC,OAAV,MAEP,SAAAH,GAAK,OAAIA,EAAMI,MAAMT,aAUhC,OAAO,kBAAC,IAAD,CAAeS,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACzE,kBAACmH,EAAD,KACC,kBAACC,EAAD,KACC,kBAACC,EAAD,CAAazG,KAAK,OAAOiB,MAAOtB,EAAMgH,YAAaC,SAAUjH,EAAMkH,eAClEC,YAAanH,EAAMmH,cACpB,kBAAClH,EAAD,CAAcK,QAASN,EAAMoH,kBAC5B,yBAAKb,MAAM,6BAA6BC,MAAM,KAAK/D,OAAO,KACzDgE,QAAQ,YAAYY,uBAAqB,KACzC,0BAAMX,EAAE,wH,y2BC9Dd,IA8CeY,GA9CO,SAACtH,GAEnB,IAAMuH,EAAuBrH,IAAOO,IAAV,MAYpBR,EAAeC,IAAOC,OAAV,MAIL,SAAAH,GAAK,OAAIA,EAAMI,MAAMV,WACV,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAErB,SAAAK,GAAK,OAAIA,EAAMI,MAAMT,aAGjB,SAAAK,GAAK,OAAIA,EAAMI,MAAMV,WAChC,SAAAM,GAAK,OAAIA,EAAMI,MAAMT,aAWtC,OAAO,kBAAC,IAAD,CAAeS,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAAC8H,EAAD,KACI,kBAACtH,EAAD,CAAcK,QAASN,EAAMwH,iBAAkBC,UAAWzH,EAAM0H,cAAcC,UAA9E,YAEA,kBAAC1H,EAAD,CAAcK,QAASN,EAAM4H,aAAcH,UAAWzH,EAAM0H,cAAcG,MAA1E,W,kcChCZ,IAmGerE,gBAnGA,SAACxD,GAAW,IAAD,EACciD,mBAAS,IADvB,mBACf6E,EADe,KACHC,EADG,OAEgB9E,mBAAS,IAFzB,mBAEf+D,EAFe,KAEFgB,EAFE,OAGE/E,mBAAS,GAHX,mBAGfhC,EAHe,KAGTgH,EAHS,OAIoBhF,mBAAS,IAJ7B,mBAIfyE,EAJe,KAIAQ,EAJA,OAKYjF,oBAAS,GALrB,mBAKfc,EALe,KAKJC,EALI,KA4BhBmE,EAAiB,SAAClH,EAAM+F,GAAgC,IAAnBoB,EAAkB,uDAAT,KAC5CC,EAAcD,GAAUnH,EAAOmH,EAASnH,EAC5CgH,EAAQI,GACRrI,EAAMyD,QAAQ6E,KAAK,CACfC,SAAU,UACVC,OAAO,SAAD,OAAWH,GAAX,OAAyBrB,EAAe,WAAaA,EAAe,OAI5EyB,EAAiB,SAACC,GACpBA,EAAQvH,MAAK,SAAAmC,GAAW,IACfqE,EAA2BrE,EAA3BqE,SAAUE,EAAiBvE,EAAjBuE,KAAMjD,EAAWtB,EAAXsB,QACrBmD,EAAcnD,GACdsD,EAAiB,CAACL,OAAMF,aACxB3D,GAAa,OAKrBX,qBAAU,WACNW,GAAa,GAGTyE,EADJzB,EACmBhG,EAA6BgG,EAAa/F,GACxCD,EAAqBC,MAC3C,CAACA,EAAM+F,EAAae,EAAe/D,IAGtC,IAAMG,EAASC,uBAAY,SAAApC,GAAI,OAAI,kBAAC,EAAD,CAAWQ,KAAMR,EAAKQ,KAAMjB,GAAIK,EAAaI,EAAKH,KACvCwC,IAAKrC,EAAKQ,KAAMpC,MAAOJ,EAAMI,WACrEuI,EAAkBb,EAAWvD,IAAIJ,GAGjCyE,EAAqB1I,IAAOO,IAAV,MASK,SAAAT,GAAK,OAAIA,EAAMI,MAAMP,WASlD,OAAO,kBAAC,IAAD,CAAeO,MAAuB,gBAAhBJ,EAAMI,MAA0BN,EAAaL,GACtE,kBAACmJ,EAAD,KACI,kBAAC,GAAD,CAAW5B,YAAaA,EAAa5G,MAAOJ,EAAMI,MACvC8G,eA1EU,SAAC2B,GAC1Bb,EAAea,EAAMC,OAAOxH,OAC5B6G,EAAe,EAAGU,EAAMC,OAAOxH,QAwEsB8F,iBArEhC,WACrBY,EAAe,IACfG,EAAe,EAAG,OAoEHhB,YAAa,mBACxB,6BAEQpD,EACM,kBAAC,EAAD,CAAgB3D,MAAOJ,EAAMI,QAC7BuI,EAEV,kBAAC,GAAD,CAAejB,cAAeA,EACftH,MAAOJ,EAAMI,MACboH,iBA1EF,WACrBR,GAAeiB,EAAQhH,EAAO,GAC9BkH,EAAelH,EAAM+F,GAAc,IAyEZY,aAtEN,WACjBZ,GAAeiB,GAAShH,EAAO,GAC/BkH,EAAelH,EAAM+F,EAAa,YCF3B+B,OAxBf,WAAgB,IAAD,EACY9F,mBAAS,eADrB,mBACP7C,EADO,KACAG,EADA,KAGd,OACC,yBAAKyI,UAAU,OACd,kBAAC,IAAD,CAAeC,SAAUC,mBACxB,kBAAC,EAAD,CAAQ3I,SAAUA,EAAUH,MAAOA,IACnC,kBAAC,GAAD,CAAQA,MAAOA,IACf,yBAAK4I,UAAU,WACd,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,KACjB,kBAAC,IAAD,CAAUxI,GAAG,aAEd,kBAAC,IAAD,CAAOwI,KAAK,UAAUD,OAAK,EAACE,OAAQ,kBAAM,kBAAC,GAAD,CAAQjJ,MAAOA,OACzD,kBAAC,IAAD,CAAOgJ,KAAK,cAAcD,OAAK,EAACE,OAAQ,kBAAM,kBAAC,EAAD,CAASjJ,MAAOA,OAC9D,kBAAC,IAAD,CAAOgJ,KAAK,SAASD,OAAK,EAACE,OAAQ,kBAAM,kBAAC,EAAD,CAAQjJ,MAAOA,OACxD,kBAAC,IAAD,CAAOgJ,KAAK,aAAaD,OAAK,EAACE,OAAQ,kBAAM,kBAAC,GAAD,CAAOjJ,MAAOA,WCd5CkJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3H,MACvB,2DCZN4H,IAASL,OACL,kBAAC,GAAD,MACAM,SAASC,eAAe,SD2HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5I,MAAK,SAAA6I,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.826f457b.chunk.js","sourcesContent":["export const darkTheme = {\n\tbgColor: '#212121',\n\ttextColor: '#FBC02D',\n\topacityBgColor: 'rgba(33, 33, 33, 0.7)',\n\tbgImage: 'https://i.pinimg.com/originals/6e/3a/d0/6e3ad0f9192c1578842f5f78facbd229.jpg'\n};\n\nexport const lightTheme = {\n\tbgColor: '#C5CAE9',\n\ttextColor: '#303F9F',\n\topacityBgColor: 'rgba(197, 202, 233, 0.7)',\n\tbgImage: 'https://c.wallhere.com/photos/86/4a/1920x1080_px_mountains_snow_Star_Wars_stormtrooper-847720.jpg!d'\n};\n\n\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\n\nconst ThemeSwitcher = (props) => {\n\n\tconst switchTheme = () => {\n\t\tprops.theme === 'theme-dark' ?\n\t\t\tprops.setTheme('theme-light') :\n\t\t\tprops.setTheme('theme-dark');\n\t};\n\n\tconst StyledButton = styled.button`\n\t\tmargin: 22px;\n        padding: 10px;\n        font-size: 20px;\n        z-index: 3;\n        color: ${props => props.theme.textColor};\n        border: 1px solid ${props => props.theme.textColor};\n        border-radius: 13px;\n        background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n        @media (max-width: 1000px){ \n\t\t\tmargin: 0;\n            padding: 10px 2px;\n    \t\tfont-size: 14px;   \n        }    \n    `;\n\n\n\treturn <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n\t\t<StyledButton type=\"checkbox\" onClick={switchTheme}> Switch theme </StyledButton>\n\t</ThemeProvider>;\n};\n\n\n\n\nexport default ThemeSwitcher;\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport ThemeSwitcher from '../../common/ThemeSwitcher/ThemeSwitcher';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\n\nconst Header = (props) => {\n\tconst Header = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 15px;\n    height: 10vh;\n\tbackground-color: ${props => props.theme.bgColor};\n\tcolor: ${props => props.theme.textColor};\n\tborder-bottom: 1px solid ${props => props.theme.textColor};\n\t    &h1 {\n\t        margin: 0;\n\t    } \n\t`;\n\tconst StyledLink = styled(Link)`\n        margin: 0;\n        text-decoration: none;\n        font-size: 2.5em;\n        font-weight: 900;\n        color: ${props => props.theme.textColor};\n         @media (max-width: 1000px){ \n            margin: 0 20px 0 60px;\n\t\t\tfont-size: 1.5em;\n\t\t\tfont-weight: 700;\n        }\n        \n    `;\n\n\n\n\n\treturn <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n\t\t<Header>\n\t\t\t<StyledLink to='/'>Star Wars Wiki</StyledLink>\n\t\t\t<ThemeSwitcher setTheme={props.setTheme} theme={props.theme}/>\n\t\t</Header>\n\t</ThemeProvider>;\n};\n\nexport default Header;\n","import * as axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://swapi.dev/api'\n},);\n\n\nexport const peopleAPI = {\n    getPeoples(page) {\n        return axiosInstance.get(`/people/?page=${page}`)\n            .then(response => response.data);\n    },\n    getFilteredPeoples(value, page) {\n        return axiosInstance.get(`/people/?search=${value}&page=${page}`)\n            .then(response => response.data);\n    },\n    getCurrentPerson(id) {\n        return axiosInstance.get(`/people/${id}`)\n            .then(response => response.data);\n    }\n};\n\nexport const filmAPI = {\n    getFilms() {\n        return axiosInstance.get('/films')\n            .then(response => response.data);\n    },\n    getCurrentFilm(id) {\n        return axiosInstance.get(`/films/${id}`)\n            .then(response => response.data);\n    }\n};\n\n\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\n\nconst LoadingSpinner = (props) => {\n\n    const LoaderWrapper = styled.div`\n    height: 90vh;\n    `;\n\n    const Loader = styled.div`display: inline-block;\n    display: block;\n    margin: 100px auto 0 auto;\n    width: 200px;\n    height: 200px;\n    &:after {\n    content: \" \";\n    display: block;\n    width: 128px;\n    height: 128px;\n    margin: 16px;\n    border-radius: 50%;\n    border: 12px solid ${props => props.theme.textColor};\n    border-color: ${props => props.theme.textColor} transparent ${props => props.theme.textColor} transparent;\n    animation: lds-dual-ring 1.2s linear infinite;\n    @keyframes lds-dual-ring {\n        0% {\n        transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n`;\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <LoaderWrapper>\n            <Loader></Loader>\n        </LoaderWrapper>\n    </ThemeProvider>\n};\n\nexport default LoadingSpinner;\n","const getIdFromUrl = (url) => {\n        return url && url.match(/[0-9]+/g);\n};\n\nexport default getIdFromUrl;\n","import React from \"react\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\n\nconst PersonInfo = ({item, theme}) => {\n\n    const PersonImage = styled.img`\n        justify-self: right;\n        width: 300px;\n        margin: 30px;\n        border-radius: 20px;\n        @media (max-width: 1000px){ \n            justify-self: center;\n            width: 200px;\n            margin: 20px 0 0 0;\n        }\n        \n    `;\n    const DetailBox = styled.div`\n        width: 300px;\n        margin-top: 30px;\n        @media (max-width: 1000px){ \n            margin: 20px;\n            width: 200px;\n        }  \n    `;\n    const StyledTextItem = styled.div`\n        display: block;\n        width: 300px;\n        padding-bottom: 20px;\n        text-transform: uppercase;\n        font-size: 20px;\n        @media (max-width: 1000px){ \n            width: 250px;\n        }  \n    \n    `;\n    const StyledHeader = styled(StyledTextItem)`\n        font-size: 30px;\n        padding-bottom: 30px;\n    `;\n\n    return <ThemeProvider theme={theme === 'theme-light' ? lightTheme : darkTheme}>\n                <PersonImage\n                    src={item.url && `https://starwars-visualguide.com/assets/img/characters/${getIdFromUrl(item.url)}.jpg`}\n                    alt={item.name}/>\n                    <DetailBox>\n                        <StyledHeader>{item.name}</StyledHeader>\n                        <StyledTextItem>height - {item.height}</StyledTextItem>\n                        <StyledTextItem>mass - {item.mass}</StyledTextItem>\n                        <StyledTextItem>hair color - {item.hair_color}</StyledTextItem>\n                        <StyledTextItem>skin color - {item.skin_color}</StyledTextItem>\n                        <StyledTextItem>eye color - {item.eye_color}</StyledTextItem>\n                        <StyledTextItem>birth year - {item.birth_year}</StyledTextItem>\n                        <StyledTextItem>gender - {item.gender}</StyledTextItem>\n                    </DetailBox>\n    </ThemeProvider>\n};\n\nexport default PersonInfo;\n","import React, {useEffect, useState} from 'react';\nimport {filmAPI} from \"../../../api/api\";\nimport {Link} from \"react-router-dom\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\n\nconst PersonFilms = (props) => {\n    const [filmInfo, setFilmInfo] = useState({});\n    const id = getIdFromUrl(props.filmUrl);\n\n\n    useEffect(() => {\n        filmAPI.getCurrentFilm(id)\n            .then(result => setFilmInfo(result));\n    }, [props.filmUrl, setFilmInfo]);\n\n\n    const StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    margin: 15px auto 15px auto;\n    width: 450px;\n    padding: 10px;\n    font-weight: 900;\n    cursor: pointer;\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n\t  }\n\t@media (max-width: 1000px){ \n            width: 200px;\n        }  \n`;\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledLink to={`/films/${id}`}>\n            {filmInfo.title}\n        </StyledLink>\n    </ThemeProvider>\n};\n\nexport default PersonFilms;\n","import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {withRouter} from \"react-router-dom\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\nconst BackButton = (props) => {\n\n    const StyledButton = styled.button`\n    width: 150px;\n        padding: 10px;\n        margin-bottom: 30px;\n        font-size: 20px;\n        color: ${props => props.theme.textColor};\n        border: 1px solid ${props => props.theme.textColor};\n        border-radius: 13px;\n        background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n    `;\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledButton onClick={props.history.goBack}>Back</StyledButton>\n    </ThemeProvider>\n};\n\nexport default withRouter(BackButton);\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {peopleAPI} from '../../../api/api';\nimport LoadingSpinner from '../../../common/LoadingSpinner/LoadingSpinner';\nimport PersonInfo from \"./PersonInfo\";\nimport {withRouter} from \"react-router-dom\";\nimport PersonFilms from \"./PersonFilms\";\nimport BackButton from \"../../../common/BackButton/BackButton\";\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\n\nconst Person = (props) => {\n    const [personInfo, setPersonInfo] = useState([]);\n    const [filmsLink, setFilmsLink] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        peopleAPI.getCurrentPerson(props.match.params.id)\n            .then(result => {\n                let {films, ...personInfo} = result;\n                setPersonInfo(personInfo);\n                setFilmsLink(films);\n                setIsLoading(false);\n            });\n    }, [setPersonInfo, setFilmsLink, setIsLoading]);\n\n\n    const toItem = useCallback(item => <PersonFilms filmUrl={item} key={item} theme={props.theme}/>);\n    const filmList = filmsLink.map(toItem);\n\n\n    const PersonStyleWrapper = styled.div`\n    top: 10vh;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    height: 100%;\n    padding: 30px;\n    background-repeat: no-repeat; \n    background-size: cover;\n    background-image: url(\"${props => props.theme.bgImage}\");\n`;\n\n    const PersonBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n    padding: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.opacityBgColor};\n    @media (max-width: 1000px){ \n            grid-template-columns: 1fr;\n            padding: 10px 0;\n    }\n`;\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <PersonStyleWrapper>\n        <BackButton theme={props.theme}/>\n        {\n            isLoading\n                ? <LoadingSpinner theme={props.theme}/>\n                : <PersonBox>\n                    <PersonInfo item={personInfo} theme={props.theme}/>\n                </PersonBox>\n        }\n            <PersonBox>\n                {filmList}\n            </PersonBox>\n        </PersonStyleWrapper>\n    </ThemeProvider>;\n};\n\n\nexport default withRouter(Person);\n","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\nconst StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    margin: 0 auto 15px auto;\n    width: 450px;\n    padding: 10px;\n    font-weight: 900;\n    cursor: pointer;\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.bgColor};\n    &:hover {\n        background-color: ${props => props.theme.textColor};\n        color: ${props => props.theme.bgColor};\n\t  }\n\t  @media (max-width: 1000px){ \n            width: 220px;\n        }\n`;\n\nconst ListsItem = ({name, id, match, theme}) => {\n\n\n    return <ThemeProvider theme={theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledLink to={match.url + `/${id}`}>\n            {name}\n        </StyledLink>\n    </ThemeProvider>\n};\n\nexport default withRouter(ListsItem);\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {filmAPI} from \"../../api/api\";\nimport ListsItem from \"../ListsItem/ListsItem\";\nimport getIdFromUrl from \"../../common/getIdFromUrl/getIdFromUrl\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport styled, {ThemeProvider} from \"styled-components\";\n\nconst Films = (props) => {\n    const [films, setFilms] = useState([]);\n\n\n    useEffect(() => {\n        filmAPI.getFilms()\n            .then(result => setFilms(result.results))\n    }, [setFilms]);\n\n\n    const toItem = useCallback(item => <ListsItem name={item.title} id={getIdFromUrl(item.url)}\n                                                           key={item.title} theme={props.theme}/>);\n    const filmLinksList = films.map(toItem);\n\n\n    const FilmsStyleWrapper = styled.div`\n    position: absolute;\n    top: 10vh;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    height: 100%;\n    padding-top: 15px;\n    background-repeat: no-repeat; \n    background-size: cover;\n    background-image: url(\"${props => props.theme.bgImage}\");\n    @media (max-width: 1000px){ \n            position: relative;\n            top: 0; \n            height: 90vh;\n         }\n`;\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <FilmsStyleWrapper>\n            {filmLinksList}\n        </FilmsStyleWrapper>\n    </ThemeProvider>\n};\n\nexport default Films;\n","import React from \"react\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\n\nconst FilmInfo = ({item, theme}) => {\n\n    const FilmImage = styled.img`\n        justify-self: right;\n        width: 300px;\n        margin: 30px;\n        border-radius: 20px;\n        @media (max-width: 1000px){ \n            justify-self: center;\n            width: 200px;\n            margin: 20px 0 0 0;\n        }\n    `;\n    const DetailBox = styled.div`\n        width: 300px;\n        margin-top: 30px;\n         @media (max-width: 1000px){ \n            margin: 20px;\n            width: 200px;\n        }  \n    `;\n\n    const StyledTextItem = styled.div`\n        display: block;\n        padding-bottom: 20px;\n        text-transform: uppercase;\n        font-size: 20px;\n        @media (max-width: 1000px){ \n            width: 250px;\n        } \n    `;\n    const StyledHeader = styled(StyledTextItem)`\n        font-size: 30px;\n        padding-bottom: 30px;\n    `;\n\n    return <ThemeProvider theme={theme === 'theme-light' ? lightTheme : darkTheme}>\n        <FilmImage\n            src={`https://starwars-visualguide.com/assets/img/films/${getIdFromUrl(item.url)}.jpg`}\n            alt={item.name}/>\n        <DetailBox>\n            <StyledHeader>{item.title}</StyledHeader>\n            <StyledTextItem>director - {item.director}</StyledTextItem>\n            <StyledTextItem>producer - {item.producer}</StyledTextItem>\n            <StyledTextItem>release data - {item.release_date}</StyledTextItem>\n            <StyledTextItem>description: {item.opening_crawl}</StyledTextItem>\n        </DetailBox>\n    </ThemeProvider>\n};\n\nexport default FilmInfo;\n","import React, {useEffect, useState} from 'react';\nimport {peopleAPI} from \"../../../api/api\";\nimport {Link} from \"react-router-dom\";\nimport getIdFromUrl from \"../../../common/getIdFromUrl/getIdFromUrl\";\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\n\nconst FilmCharacter = (props) => {\n    const [personInfo, setPersonInfo] = useState({});\n    const id = getIdFromUrl(props.personUrl);\n\n\n    useEffect(() => {\n        peopleAPI.getCurrentPerson(id)\n            .then(result => {\n                setPersonInfo(result)});\n    }, [props.personUrl, setPersonInfo]);\n\n\n    const StyledLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    margin: 15px auto 15px auto;\n    width: 450px;\n    padding: 10px;\n    font-weight: 900;\n    cursor: pointer;\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n    font-size: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.bgColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n\t  }\n\t@media (max-width: 1000px){ \n            width: 200px;\n        }    \n`;\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <StyledLink to={`/people/${id}`}>\n            {personInfo.name}\n        </StyledLink>\n    </ThemeProvider>\n};\n\nexport default FilmCharacter;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {filmAPI} from \"../../../api/api\";\nimport LoadingSpinner from \"../../../common/LoadingSpinner/LoadingSpinner\";\nimport FilmInfo from \"./FilmInfo\";\nimport FilmCharacter from \"./FilmCharacter\";\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../../theme/theme\";\nimport BackButton from \"../../../common/BackButton/BackButton\";\n\nconst Film = (props) => {\n    const [filmInfo, setFilmInfo] = useState([]);\n    const [peopleLink, setPeopleLink] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        filmAPI.getCurrentFilm(props.match.params.id)\n            .then(result => {\n                let {characters, ...filmInfo} = result;\n                setFilmInfo(filmInfo);\n                setPeopleLink(characters);\n                setIsLoading(false);\n            });\n    }, [setFilmInfo, setPeopleLink, setIsLoading]);\n\n\n    const toItem = useCallback(item => <FilmCharacter personUrl={item} key={item} theme={props.theme}/>);\n    const characterList = peopleLink.map(toItem);\n\n\n    const FilmsStyleWrapper = styled.div`\n    top: 10vh;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    height: 100%;\n    padding: 30px;\n    background-repeat: no-repeat; \n    background-size: cover;\n    background-image: url(\"${props => props.theme.bgImage}\");\n`;\n\n    const FilmBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n    padding: 20px;\n    color: ${props => props.theme.textColor};\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 13px;\n    background-color: ${props => props.theme.opacityBgColor};\n    @media (max-width: 1000px){ \n            grid-template-columns: 1fr;\n            padding: 10px 0;\n    }\n`;\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <FilmsStyleWrapper>\n            <BackButton theme={props.theme}/>\n            {\n                isLoading\n                    ? <LoadingSpinner theme={props.theme}/>\n                    : <FilmBox>\n                        <FilmInfo item={filmInfo}/>\n                    </FilmBox>\n            }\n            <FilmBox>\n                {characterList}\n            </FilmBox>\n        </FilmsStyleWrapper>\n    </ThemeProvider>;\n};\n\nexport default withRouter(Film);\n\n","import styled from 'styled-components';\nimport {NavLink} from \"react-router-dom\";\n\nexport const NavBarWrapper = styled.div`\n        position: absolute;\n         top: 0;\n        left: 0;\n        width: 15vw;\n        height: 10vh;\n       background-color: ${props => props.theme.bgColor};\n       z-index: 2;\n       border-bottom: 1px solid ${props => props.theme.textColor};\n    `;\n\nexport const NavBarButton = styled.div`\n        margin: calc((10vh - 42px)/2);\n        width: 42px;\n        color: ${props => props.theme.textColor};\n        cursor: pointer;\n\n    `;\n\nexport const MenuSvg = styled.svg`\n    fill: ${props => props.theme.textColor};\n    `;\n\nexport const NavBarBlock = styled.div`\n        display: grid;\n        width: 300px;\n        grid-template-columns: 1fr;\n               background-color: ${props => props.theme.bgColor};\n        \n    `;\n\nexport const StyledNavLink = styled(NavLink)`\ndisplay: flex;\njustify-content: center;\n        padding: 15px 10px;\n        text-decoration: none;\n        color: ${props => props.theme.textColor};\n        font-size: 20px;\n        border-bottom: 1px solid ${props => props.theme.textColor};\n        &:hover {\n            background-color: ${props => props.theme.textColor};\n            color: ${props => props.theme.bgColor};\n        }\n    `;\n","import React, {useState} from 'react';\nimport {MenuSvg, NavBarBlock, NavBarButton, NavBarWrapper, StyledNavLink} from \"./NavBar.styles\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\nimport {ThemeProvider} from \"styled-components\";\n\nconst NavBar = (props) => {\n    const [isShow, setIsShow] = useState(false);\n    const toggleNavBar = () => setIsShow(!isShow);\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <NavBarWrapper>\n            <NavBarButton onClick={toggleNavBar}>\n                <MenuSvg xmlns=\"http://www.w3.org/2000/svg\" width=\"42\" height=\"42\" viewBox=\"0 0 18 18\">\n                    <path d=\"M2 13.5h14V12H2v1.5zm0-4h14V8H2v1.5zM2 4v1.5h14V4H2z\"/>\n                </MenuSvg>\n            </NavBarButton>\n            {isShow &&\n            <NavBarBlock isShow>\n\n                <StyledNavLink onClick={toggleNavBar} to={'/people'}>People</StyledNavLink>\n\n                <StyledNavLink onClick={toggleNavBar} to={'/films'}>Films</StyledNavLink>\n\n            </NavBarBlock>\n            }\n        </NavBarWrapper>\n    </ThemeProvider>;\n};\n\n\nexport default NavBar;\n","import React, {useState} from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from '../../theme/theme';\n\n\nconst SearchBar = (props) => {\n\n\tconst SearchBarWrapper = styled.div`\n\tdisplay: flex;\n    justify-content: center;\n    color: ${props => props.theme.textColor};\n    padding: 30px;\n\t`;\n\n\tconst SearchBox = styled.div`\n\tdisplay: grid;\n    grid-template-columns: 1fr 24px;\n    padding: 0 8px;\n     width: 450px;\n    border: 1px solid ${props => props.theme.textColor};\n    border-radius: 30px;\n    height: 36px;\n    background-color: ${props => props.theme.bgColor};\n\t`;\n\n\tconst StyledInput = styled.input`\n    width: 100%;\n    height: 100%;\n    padding-left: 15px;\n    outline: none;\n    -webkit-appearance: none;\n    border: none;\n    font-size: 24px;\n    font-weight: 900;\n    background-color: inherit;\n    color: ${props => props.theme.textColor};\n\tborder-radius: 30px;\n    align-self: center;\n    justify-self: center;\n\t&::placeholder {\n\tbackground-color: inherit;\n    color: ${props => props.theme.textColor};\n    font-weight: 100;\n\t}\n`;\n\n\tconst StyledButton = styled.button`\n\tdisplay: flex;\n    fill: ${props => props.theme.textColor};\n    margin-top: 6px;\n\t background: none;\n    color: inherit;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    outline: inherit;\n\t`;\n\n\treturn <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n\t\t<SearchBarWrapper>\n\t\t\t<SearchBox>\n\t\t\t\t<StyledInput type=\"text\" value={props.searchValue} onChange={props.filterOnChange}\n\t\t\t\t\tplaceholder={props.placeholder}/>\n\t\t\t\t<StyledButton onClick={props.cleanSearchValue}>\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n\t\t\t\t\t\tviewBox=\"0 0 48 48\" data-ember-extension=\"1\">\n\t\t\t\t\t\t<path d=\"M38 12.83L35.17 10 24 21.17 12.83 10\n                    10 12.83 21.17 24 10 35.17 12.83 38 24 26.83\n                    35.17 38 38 35.17 26.83 24z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</StyledButton>\n\t\t\t</SearchBox>\n\t\t</SearchBarWrapper>\n\t</ThemeProvider>;\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport styled, {ThemeProvider} from \"styled-components\";\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\nconst PageNumberBar = (props) => {\n\n    const PageNumberBarWrapper = styled.div`\n        display: flex;\n        justify-content: space-between;\n        width: 450px;\n        margin: 0 auto;\n        padding-bottom: 30px;\n        @media (max-width: 1000px){ \n            width: auto;\n            justify-content: space-around;\n        }\n    `;\n\n    const StyledButton = styled.button`\n        padding: 10px 20px;\n        width: 220px;\n        font-size: 20px;\n        color: ${props => props.theme.bgColor};\n        border: 1px solid ${props => props.theme.textColor};\n        border-radius: 13px;\n        background-color: ${props => props.theme.textColor};\n        cursor: pointer; \n        &:hover {\n            background-color: ${props => props.theme.bgColor};\n            color: ${props => props.theme.textColor};\n        }\n        &:disabled {\n        background-color: #757575;\n        }\n        @media (max-width: 1000px){ \n            width: 120px;\n        }\n    `;\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <PageNumberBarWrapper>\n            <StyledButton onClick={props.showPreviousPage} disabled={!props.availablePage.previous}\n            >Previous</StyledButton>\n            <StyledButton onClick={props.showNextPage} disabled={!props.availablePage.next}\n            >Next</StyledButton>\n        </PageNumberBarWrapper>\n    </ThemeProvider>;\n};\n\nexport default PageNumberBar;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {peopleAPI} from '../../api/api';\nimport LoadingSpinner from '../../common/LoadingSpinner/LoadingSpinner';\nimport SearchBar from '../../common/SearchBar/SearchBar';\nimport PageNumberBar from '../../common/PageNumberBar/PageNumberBar';\nimport ListsItem from '../ListsItem/ListsItem';\nimport getIdFromUrl from '../../common/getIdFromUrl/getIdFromUrl';\nimport {withRouter} from 'react-router-dom';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {darkTheme, lightTheme} from \"../../theme/theme\";\n\n\nconst People = (props) => {\n    const [peopleList, setPeopleList] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [page, setPage] = useState(1);\n    const [availablePage, setAvailablePage] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const peopleFilterOnChange = (event) => {\n        setSearchValue(event.target.value);\n        setQueryString(1, event.target.value);\n    };\n\n    const cleanSearchValue = () => {\n        setSearchValue('');\n        setQueryString(1, null);\n    };\n\n    const showPreviousPage = () => {\n        searchValue && setPage(page - 1);\n        setQueryString(page, searchValue, -1);\n    };\n\n    const showNextPage = () => {\n        searchValue && setPage(+page + 1);\n        setQueryString(page, searchValue, 1);\n    };\n\n    const setQueryString = (page, searchValue, action = null) => {\n        let currentPage = action ? +page + action : page;\n        setPage(currentPage);\n        props.history.push({\n            pathname: '/people',\n            search: `?page=${currentPage}${searchValue ? ('&search=' + searchValue) : ''}`\n        });\n    };\n\n    const getDataFromApi = (promise) => {\n        promise.then(result => {\n            let {previous, next, results} = result;\n            setPeopleList(results);\n            setAvailablePage({next, previous});\n            setIsLoading(false);\n        });\n    };\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        // setQueryString(page, searchValue);\n        searchValue ?\n            getDataFromApi(peopleAPI.getFilteredPeoples(searchValue, page))\n            : getDataFromApi(peopleAPI.getPeoples(page));\n    }, [page, searchValue, setPeopleList, setIsLoading]);\n\n\n    const toItem = useCallback(item => <ListsItem name={item.name} id={getIdFromUrl(item.url)}\n                                                  key={item.name} theme={props.theme}/>);\n    const personLinksList = peopleList.map(toItem);\n\n\n    const PeopleStyleWrapper = styled.div`\n        position: absolute;\n        top: 10vh;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        height: 100%;\n        background-repeat: no-repeat; \n        background-size: cover;\n        background-image: url(\"${props => props.theme.bgImage}\");\n        @media (max-width: 1000px){ \n            position: relative;\n            top: 0; \n            min-height: 90vh;\n         }\n`;\n\n\n    return <ThemeProvider theme={props.theme === 'theme-light' ? lightTheme : darkTheme}>\n        <PeopleStyleWrapper>\n            <SearchBar searchValue={searchValue} theme={props.theme}\n                       filterOnChange={peopleFilterOnChange} cleanSearchValue={cleanSearchValue}\n                       placeholder={'Search by name'}/>\n            <div>\n                {\n                    isLoading\n                        ? <LoadingSpinner theme={props.theme}/>\n                        : personLinksList\n                }\n                <PageNumberBar availablePage={availablePage}\n                               theme={props.theme}\n                               showPreviousPage={showPreviousPage}\n                               showNextPage={showNextPage}/>\n            </div>\n        </PeopleStyleWrapper>\n    </ThemeProvider>;\n};\n\nexport default withRouter(People);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Person from './Components/People/Person/Person';\nimport Films from './Components/Films/Films';\nimport Film from './Components/Films/Film/Film';\nimport NavBar from './Components/NavBar/NavBar';\nimport People from './Components/People/People';\n\n\nfunction App() {\n\tconst [theme, setTheme] = useState('theme-light');\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Header setTheme={setTheme} theme={theme}/>\n\t\t\t\t<NavBar theme={theme}/>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/people\" />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/people' exact render={() => <People theme={theme}/>}/>\n\t\t\t\t\t<Route path='/people/:id' exact render={() => <Person  theme={theme}/>}/>\n\t\t\t\t\t<Route path='/films' exact render={() => <Films  theme={theme}/>}/>\n\t\t\t\t\t<Route path='/films/:id' exact render={() => <Film  theme={theme}/>}/>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\n\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}